#!/usr/bin/env python3

"""Super class for all malwares.

"""
class Malware:
  """Defines the lifetime of the malware's domains.

  The lifetime is expressed in seconds.
  0 means that the malware doesn't implement a DGA.

  Returns:
    The lifetime of the malware's domains.
  """
  @classmethod
  def domainsLifetime(self):
    return 0

  """Returns the list of domains used by the malware.

  This method will return the list of domain for the current day/hour if it is a DGA.

  Returns:
    An array of the domains used by this malware.
  """
  @classmethod
  def domains(self):
    return []

  """Returns the list of domains used by the malware at a certain time.

  If the malware isn't a DGA, this method will return the list of all domains used.
  Refer to the method domainsLifetime for the lifetime of these domains.

  Params:
    date The date and time for which you want the domains used.

  Returns:

  """
  @classmethod
  def domainsFor(self, date):
    return []

  """Checks if a domain could be used by the malware.

  This method can be used to eliminate potential malware candidates for a domain.
  It can only verify that a domain isn't used by the malware.
  It won't check if it is actually used by the malware.

  Params:
    domain The domain to check.

  Returns:
    False if the malware can't be one of the malware's, true otherwise.
  """
  @classmethod
  def couldUseDomain(domain):
    return False
